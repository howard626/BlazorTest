@page "/login"
@layout LoginLayout
@inject IJSRuntime js
@inject NavigationManager navigation
@inject IAuthService authService

<div class="card">
    <div class="card-body my-2">
        <h3>Login</h3>
        <hr />
        <EditForm Model="loginModel" OnValidSubmit="SubmitHandlerAsync">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label for="account">Account</label>
                <InputText @bind-Value="loginModel.Account" class="form-control" id="account" />
            </div>
            <div class="form-group">
                <label for="pw">Password</label>
                <InputText @bind-Value="loginModel.Password" class="form-control" id="pw" type="password" />
            </div>
            <button class="btn btn-primary btn-block">Submit</button>
        </EditForm>
    </div>
</div>

@code {
    private bool IsSubmit = false;
    private string test = "";
    private LoginModel loginModel = new LoginModel();

    private void SubmitHandler()
    {
        Console.WriteLine($"{loginModel.Account} / {loginModel.Password}");
    }

    private async Task SubmitHandlerAsync()
    {
        //Console.WriteLine($"Email：{loginModel.Email} / Password：{loginModel.Password}");

        IsSubmit = true;

        User userInfo = new User()
        {
            Account = loginModel.Account,
            Password = loginModel.Password
        };

        bool result = await authService.LoginAsync(userInfo);
        if (result)
        {
            navigation.NavigateTo("/");
        }
        else
        {
            await js.InvokeVoidAsync("alert", "登入失敗");
        }

        IsSubmit = false;
    }

    private void InvalidHandler()
    {
        Console.WriteLine($"{loginModel.Account} / {loginModel.Password}");
    }

}